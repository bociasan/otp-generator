@{
    ViewBag.Title = "Create OTP";
}

<div class="jumbotron">
    @* <p id="time"></p> *@
    <div >
        <div style="display: inline-block;">
            <div>
                <p class="lead">Create OTP</p>
                <p>
                    <input type="text" id="userId" placeholder="User ID"/>
                </p>
                <p>
                    <button onclick="onCreateHandler()"> Create </button>
                    <span id="remaining" style="margin: 25px;"></span>
                </p>
            </div>
            <div>
                <p class="lead">Validate OTP</p>
                <p>
                    <input type="text" id="key" placeholder="OTP Key"/>
                    <span id="keyStatus"></span>
                </p>
                <p>
                    <button onclick="onValidateHandler()"> Validate </button>
                </p>
            </div>
        </div>
        <div class="messages" style="margin: 0 80px;display: inline-block; width: 500px; max-height: 250px; overflow: hidden;"/>
    </div>
</div>

@section Scripts
{
    <script>
function updateTime() {
    document.getElementById('time').innerHTML = new Date().toLocaleString();
    let remainingTime = document.getElementById('remaining').innerText
    
    if (remainingTime !== '') {
        try {
            remainingTime = parseInt(remainingTime.replace(/[A-Za-z: ]/g, ''))
            if (remainingTime > 0) {
                remainingTime--
                document.getElementById('remaining').innerText = `Expires in: ${remainingTime}s`
            } else {
                document.getElementById('remaining').innerText = ''
            }
        } catch (err) {
            console.log(err)
        }
    }
    setTimeout(updateTime, 1000);
}

updateTime()

function onCreateHandler() {
    const GENERATE_OTP_URL = '@System.Web.Configuration.WebConfigurationManager.AppSettings["GENERATE_OTP_URL"]';
    let userId = document.getElementById("userId").value;

    if (userId !== '') {
        postData(GENERATE_OTP_URL, {userId, requestDateTime: new Date().toJSON()})
            .then((data) => {
                console.log(data);
                document.getElementById('remaining').innerText = 'Expires in: 30s';
                alert(`OTP ${data.Key} is valid for 30 seconds.`);
            });
    } else {
        alert('UserID shouldn\'t be empty.')
    }

}

function onValidateHandler() {
    const VALIDATE_OTP_URL = '@System.Web.Configuration.WebConfigurationManager.AppSettings["VALIDATE_OTP_URL"]';
    let userId = document.getElementById("userId").value;
    let key = document.getElementById("key").value;

    if (userId.length > 0) {
        if (key.length > 0) {
            postData(VALIDATE_OTP_URL, {userId, key})
                .then((data) => {
                    console.log(data)
                    // document.getElementById("keyStatus").innerHTML = data.status
                    var message = $(`<div class="alert alert-error error-message" style="position: relative;display: none;color: ${getColor(data.Status)};top: 30%;width:300px;z-index: 9999;">`);
                    var close = $('<button type="button" class="close" data-dismiss="alert">&times</button>');
                    message.append(close);
                    message.append(data.Message);
                    message.appendTo($('.messages')).fadeIn(300).delay(2000).fadeOut(500);
                    
                    if (data.status === 'valid'){
                        document.getElementById('remaining').innerText = ''
                    }
                })
        } else {
            alert('Enter OTP key.')
        }
    } else {
        alert('UserID shouldn\'t be empty.')
    }
    }

async function postData(url = '', data = {}) {
    const response = await fetch(url, {
        method: 'POST',
        mode: 'cors', 
        cache: 'no-cache', 
        credentials: 'same-origin',
        headers: {
            'Content-Type': 'application/json'
        },
        redirect: 'follow', 
        referrerPolicy: 'no-referrer', 
        body: JSON.stringify(data) 
    });
    return response.json(); 
}

function getColor(color) {
    switch (color) {
        case "valid":
            return "green"
        case "unknown":
            return "red"
        case "expired":
            return "purple"
        case "invalid":
            return "red"
        case "used":
            return "red"
        default:
            return "black"

    }
    }       
    </script>
}